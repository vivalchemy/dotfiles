# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, SPACE, exec, $HOME/.local/bin/rofi-prefixer
bind = $mainMod, A, exec, $menu -show drun -theme general/grid.rasi -theme-str 'configuration { display-drun: "ï€‚ Applications"; }'# applications:
bind = $mainMod, B, exec, $browser # open browser
bind = $mainMod, C, killactive,
bind = $mainMod, E, exec, $fileManager # open files manager
bind = $mainMod, F, togglefloating, 
bind = $mainMod, I, exec, $HOME/.local/bin/hyprhaven -r
bind = $mainMod, M, exit,
bind = $mainMod, N, exec, $notesManager # open notes
bind = $mainMod, P, pin # dwindle
bind = $mainMod, R, exec, $menu -show run # executables
bind = $mainMod, S, exec, curl -F"file=@$(fd . $HOME -H -E .local -E .cache -E .cargo -E .npm -E .ssh -E .mozilla -t f| $menu -dmenu -i)" -Fexpires=240 0x0.st | wl-copy # share a file
bind = $mainMod, T, exec, $terminal # open terminal 
bind = $mainMod, V, exec, cliphist list | rofi -dmenu  | cliphist decode | wl-copy
bind = $mainMod, W, exec, bash -c 'pgrep -x waybar >/dev/null && pkill -x waybar || waybar &'
# Example special workspace (scratchpad)
# bind = $mainMod, W, togglespecialworkspace, magic
# bind = $mainMod SHIFT, W, movetoworkspace, special:magic
# bind = $mainMod, X, exec, killapp # doesn't work cause killapp is in zsh config which is not global

# bind = $mainMod, J, togglesplit, # dwindle
# bind = $mainMod, Q, workspace, 10 # background apps in terminal(no need we already have special workspace)


# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10


# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Audio
binde=, XF86AudioRaiseVolume, exec, $HOME/.local/bin/volume_controller.sh 2%+
binde=, XF86AudioLowerVolume, exec, $HOME/.local/bin/volume_controller.sh 2%-
bind =, XF86AudioMute, exec, $HOME/.local/bin/volume_controller.sh toggle

# Brightness
binde=, XF86MonBrightnessUp, exec,$HOME/.local/bin/brightness_controller.sh 2%+ 
binde=, XF86MonBrightnessDown, exec, $HOME/.local/bin/brightness_controller.sh 2%-

# screenshots
bind = , Print, exec, grim -g "$(slurp -d)" - | tee "$HOME/Pictures/screenshots/$(date +%d%b%y_%Hh%Mm%Ss.png)" | wl-copy && notify-send "Screenshot copied to clipboard" -i /usr/share/icons/Papirus-Dark/symbolic/apps/gnome-screenshot-symbolic.svg #save and copy
bind = $mainMod, Print, exec, grim - | tee "$HOME/Pictures/screenshots/$(date +%d%b%y_%Hh%Mm%Ss.png)" | wl-copy && notify-send "Screenshot copied to clipboard" -i /usr/share/icons/Papirus-Dark/symbolic/apps/gnome-screenshot-symbolic.svg # save and cipy full window

# toggle keyd
bindr = SUPER ALT, k, exec, $HOME/.local/bin/toggle_keyd.sh && notify-send "Keyboard layout toggled" -i /usr/share/icons/Papirus-Dark/symbolic/devices/input-keyboard-symbolic.svg
